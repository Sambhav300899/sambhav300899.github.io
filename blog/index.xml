<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>My Personal Blog on Sambhav Singh Rohatgi</title><link>https://sambhav300899.github.io/blog/</link><description>Recent content in My Personal Blog on Sambhav Singh Rohatgi</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 25 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://sambhav300899.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>A pipeline for creating geospatial datasets</title><link>https://sambhav300899.github.io/blog/geospatial-dataset-creation-sample-pipeline/</link><pubDate>Wed, 25 Sep 2024 00:00:00 +0000</pubDate><guid>https://sambhav300899.github.io/blog/geospatial-dataset-creation-sample-pipeline/</guid><description>Motivation # I am working as an industry expert in a team under Dr.Nadia Ahmed in a research project at UC Irvine. We will be exploring the applications of satellite imagery for animal migration tracking.</description></item><item><title>Part 2: Deploy your custom MLflow server on GCP with Cloud run and github actions</title><link>https://sambhav300899.github.io/blog/mlflow-on-gcp-2/</link><pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate><guid>https://sambhav300899.github.io/blog/mlflow-on-gcp-2/</guid><description>Sambhav300899/mlflow-gcp-server Python 0 0 Motive # In part 1 of the series, we looked at how we can host our own tracking server on GCP using a VM, we did see many issues with the earlier approach though, with regards to authentication, versioning, manual resource management etc.</description></item><item><title>Part 1: Hosting your custom MLflow server on GCP VM</title><link>https://sambhav300899.github.io/blog/mlflow-on-gcp-1/</link><pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate><guid>https://sambhav300899.github.io/blog/mlflow-on-gcp-1/</guid><description>Motive # MLflow is a popular library for experiment tracking for Machine Learning. In addition to experiment tracking, it also offers a model registery and tracking platform. MLFlow can be used with a local database and artifact store, this is usually good enough for running experiments personally.</description></item><item><title>DBSCAN clustering and reverse geocoding for geospatial data</title><link>https://sambhav300899.github.io/blog/dbscan-clustering/</link><pubDate>Tue, 06 Jun 2023 00:00:00 +0000</pubDate><guid>https://sambhav300899.github.io/blog/dbscan-clustering/</guid><description>Motive # The motive of the following post is to take a look at how to cluster geospatial data using the Density-Based Spatial Clustering of Applications with Noise (DBSCAN) algorithm.</description></item><item><title>Using Radar Plots to Compare Model Performance</title><link>https://sambhav300899.github.io/blog/radar-plots/</link><pubDate>Tue, 09 May 2023 00:00:00 +0000</pubDate><guid>https://sambhav300899.github.io/blog/radar-plots/</guid><description>Motive # Does looking at a table comparing model peformance across multiple metrics feel bothersome to you? Lets see how radar plots can help us quickly visually compare model performance across multiple metrics.</description></item></channel></rss>